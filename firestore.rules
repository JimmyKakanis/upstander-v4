rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin and get their schoolId
    function getAdminSchoolId() {
      let adminDoc = get(/databases/$(database)/documents/admins/$(request.auth.uid));
      // This function is no longer directly used for the list rule,
      // but it's kept for potential future use or if other rules rely on it.
      return adminDoc.data.schoolId;
    }

    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    match /reports/{reportId} {
      // Allow anyone to create a report.
      // The `schoolId` must be present in the request data.
      allow create: if request.resource.data.schoolId is string;

      // Allow authenticated admins to read a report if it matches their schoolId.
      // Allow an unauthenticated user to read a report if a valid followUpAccess document exists.
      allow get: if (request.auth != null && isAdmin() && getAdminSchoolId() == resource.data.schoolId) ||
                   (exists(/databases/$(database)/documents/followUpAccess/$(resource.data.referenceCode)) &&
                    get(/databases/$(database)/documents/followUpAccess/$(resource.data.referenceCode)).data.reportId == reportId);

      // Allow admin to list reports for their school if their auth token has the correct schoolId claim.
      allow list: if request.auth != null && request.auth.token.schoolId == request.query.schoolId;

      // Allow admins to update a report
      allow update: if request.auth != null
                    && isAdmin() && getAdminSchoolId() == resource.data.schoolId
                    && request.resource.data.typeOfBullying == resource.data.typeOfBullying
                    && request.resource.data.description == resource.data.description
                    && request.resource.data.date == resource.data.date
                    && request.resource.data.time == resource.data.time
                    && request.resource.data.location == resource.data.location
                    && request.resource.data.createdAt == resource.data.createdAt
                    && request.resource.data.schoolId == resource.data.schoolId
                    && request.resource.data.referenceCode == resource.data.referenceCode;
    }

    // Collection to securely link a public referenceCode to a private reportId
    match /followUpAccess/{referenceCode} {
      // Allow anyone to get a document if they know the exact referenceCode.
      // This is used by students to initiate the follow-up process.
      allow get: if true;

      // Creation is allowed only as part of the report submission transaction.
      allow create: if request.resource.data.reportId is string && request.resource.data.createdAt is timestamp;
      
      // Do not allow clients to list, update, or delete these documents.
      allow list, update, delete: if false;
    }

    // Optional: Secure the admins collection
    match /admins/{adminId} {
      // Allow admins to read their own profile if the UID matches.
      allow read: if request.auth != null && request.auth.uid == adminId;
      
      // Do not allow anyone to create, update, or delete admin documents from the client.
      // This should be handled by a secure backend environment.
      allow create, update, delete: if false; 
    }
  }
}

